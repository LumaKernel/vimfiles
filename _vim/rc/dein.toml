[[plugins]]
repo = 'Shougo/dein.vim'

# カーソル位置によってft切り替え
# これでtomlファイルをウハウハ編集
[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

# カーソル位置のコンテキストのft判定
[[plugins]]
repo = 'Shougo/context_filetype.vim'

# toml syntax
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

# comment out
[[plugins]]
repo = 'tyru/caw.vim'
hook_add = '''
  nmap <C-K> <Plug>(caw:hatpos:toggle)
  vmap <C-K> <Plug>(caw:hatpos:toggle)
'''

# molokai
[[plugins]]
repo = 'tomasr/molokai'

# restart
[[plugins]]
repo = 'tyru/restart.vim'

[[plugins]]
repo = 'vim-scripts/TwitVim'
hook_add = '''
  if has('mac')
    let twitvim_browser_cmd = 'open'
  endif
  " TODO : for windows
  let twitvim_force_ssl = 1
  let twitvim_count = 40

  nnoremap <SPACE>t :PosttoTwitter<CR>
'''

# NERDTree
[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  nnoremap <silent> <SPACE>n :NERDTreeToggle<CR>
'''

# Haskell{{{

[[plugins]]
repo = 'dag/vim2hs'

[[plugins]]
repo = 'eagletmt/ghcmod-vim'
hook_add = '''
  augroup ghcmodcheck
    " autocmd! BufWritePost <buffer> GhcModCheckAsync
    " Todo :
  augroup END
'''

# }}}

# C++{{{
[[plugins]]
repo = 'vim-jp/cpp-vim'


# }}}

# vimproc
[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if dein#util#_is_windows()
    let cmd = 'tools\\update-dll-mingw'
  elseif dein#util#_is_cygwin()
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''


